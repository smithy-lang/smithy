{
    "smithy": "2.0",
    "shapes": {
        "ns.foo#String": {
            "type": "string"
        },
        "ns.foo#Integer": {
            "type": "integer"
        },
        "ns.foo#Long": {
            "type": "long"
        },
        "ns.foo#Float": {
            "type": "float"
        },
        "ns.foo#Boolean": {
            "type": "boolean"
        },
        "ns.foo#Blob": {
            "type": "blob",
            "traits": {
                "smithy.api#mediaType": "text/plain"
            }
        },
        "ns.foo#List": {
            "type": "list",
            "member": {
                "target": "ns.foo#String"
            }
        },
        "ns.foo#Map": {
            "type": "map",
            "key": {
                "target": "ns.foo#String"
            },
            "value": {
                "target": "ns.foo#String"
            }
        },
        "ns.foo#MyService": {
            "type": "service",
            "version": "2017-01-17",
            "resources": [
                {
                    "target": "ns.foo#MyResource"
                }
            ],
            "operations": [
                {
                    "target": "ns.foo#OperationA"
                }
            ]
        },
        "ns.foo#MyResource": {
            "type": "resource",
            "identifiers": {
                "id": {
                    "target": "ns.foo#MyResourceIdentifier"
                }
            },
            "operations": [
                {
                    "target": "ns.foo#OperationB"
                }
            ]
        },
        "ns.foo#MyResourceIdentifier": {
            "type": "string"
        },
        "ns.foo#OperationA": {
            "type": "operation",
            "input": {
                "target": "ns.foo#OperationAInput"
            },
            "output": {
                "target": "ns.foo#OperationAOutput"
            },
            "errors": [
                {
                    "target": "ns.foo#OperationErrorA"
                },
                {
                    "target": "ns.foo#OperationErrorB"
                }
            ],
            "traits": {
                "smithy.api#readonly": {}
            }
        },
        "ns.foo#OperationAInput": {
            "type": "structure",
            "members": {
                "memberName": {
                    "target": "ns.foo#String"
                },
                "otherMemberName": {
                    "target": "ns.foo#Integer"
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "ns.foo#OperationAOutput": {
            "type": "structure",
            "members": {
                "b": {
                    "target": "ns.foo#Map"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "ns.foo#OperationErrorA": {
            "type": "structure",
            "traits": {
                "smithy.api#error": "client"
            }
        },
        "ns.foo#OperationErrorB": {
            "type": "structure",
            "traits": {
                "smithy.api#error": "server"
            }
        },
        "ns.foo#OperationB": {
            "type": "operation",
            "input": {
                "target": "ns.foo#OperationBInput"
            }
        },
        "ns.foo#OperationBInput": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "ns.foo#MyResourceIdentifier",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "ns.foo#UtcTimestamp": {
            "type": "timestamp"
        },
        "other.ns#String": {
            "type": "string"
        }
    },
    "metadata": {
        "validators": [
            {
                "id": "integer",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "integer"
                }
            },
            {
                "id": "long",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "long"
                }
            },
            {
                "id": "float",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "float"
                }
            },
            {
                "id": "boolean",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "boolean"
                }
            },
            {
                "id": "blob",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "blob"
                }
            },
            {
                "id": "list",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "list"
                }
            },
            {
                "id": "map",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "map"
                }
            },
            {
                "id": "operation",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "operation"
                }
            },
            {
                "id": "resource",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "resource"
                }
            },
            {
                "id": "member",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "member"
                }
            },
            {
                "id": "number",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "number"
                }
            },
            {
                "id": "simpleType",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "simpleType"
                }
            },
            {
                "id": "shapeId",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[id='ns.foo#String']"
                }
            },
            {
                "id": "shapeId",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[id=ns.foo#String]"
                }
            },
            {
                "id": "shapeName",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[id|name='String']"
                }
            },
            {
                "id": "shapeName",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[id|name=\"String\"]"
                }
            },
            {
                "id": "shapeNamespace",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[id|namespace='other.namespace']"
                }
            },
            {
                "id": "shapeMember",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[id|member=memberName]"
                }
            },
            {
                "id": "traitExists",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType]"
                }
            },
            {
                "id": "traitEqualTo",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType='text/plain']"
                }
            },
            {
                "id": "traitEqualToCaseInsensitive",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType='TEXT/PLAIN' i]"
                }
            },
            {
                "id": "traitEqualToCaseInsensitiveNoQuotes",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType^=TEXT  i]"
                }
            },
            {
                "id": "traitStartsWith",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType^='text']"
                }
            },
            {
                "id": "traitEndsWith",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType$='plain']"
                }
            },
            {
                "id": "traitContains",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType*='plain']"
                }
            },
            {
                "id": "traitContains",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|smithy.api#mediaType*=plain]"
                }
            },
            {
                "id": "traitStartsWithCaseInsensitive",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType^='PLAIN' i]"
                }
            },
            {
                "id": "traitEndsWithICaseInsensitive",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType='PLAIN' i]"
                }
            },
            {
                "id": "traitContainsCaseInsensitive",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|mediaType*='PLAIN' i]"
                }
            },
            {
                "id": "valid-neighbor-only",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": ">"
                }
            },
            {
                "id": "identifier",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "resource -[identifier]-> string"
                }
            },
            {
                "id": "serviceChild",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "service -[resource]-> resource"
                }
            },
            {
                "id": "any",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": ":is(long, float, boolean)"
                }
            },
            {
                "id": "not",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": ":not(:is([trait|error], simpleType))"
                }
            },
            {
                "id": "serviceVersion",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[service|version^=2017]"
                }
            },
            {
                "id": "memberTargetsString",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": ":test(member > [id='ns.foo#String'])"
                }
            },
            {
                "id": "ignored",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|notRealTrait|notFound]"
                }
            },
            {
                "id": "ignored",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[var|notRealVar|notFound]"
                }
            },
            {
                "id": "ignored",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "[trait|error|nesting|into|things|is|tolerated]"
                }
            },
            {
                "id": "ignored",
                "name": "EmitEachSelector",
                "configuration": {
                    "selector": "list :is(-[identifier]->, -[bound]->) *"
                }
            }
        ]
    }
}
