[ERROR] ns.foo#A: This operation uses `smithy.api#Unit` as input, but the following URI labels found in the operation's `http` trait do not have a corresponding member marked with the `httpLabel` trait: `foo` | HttpLabelTrait
[ERROR] ns.foo#B: This operation uses `ns.foo#BInput` as input, but the following URI labels found in the operation's `http` trait do not have a corresponding member marked with the `httpLabel` trait: `d` | HttpLabelTrait
[ERROR] ns.foo#BadError: Trait `httpError` cannot be applied to `ns.foo#BadError`. This trait may only be applied to shapes that match the following selector: structure[trait|error] | TraitTarget
[ERROR] ns.foo#BadErrorMultipleBindings$foo: Found conflicting traits on member shape: `httpHeader` conflicts with `httpPayload`, `httpPayload` conflicts with `httpHeader` | TraitConflict
[ERROR] ns.foo#DInput$a: `httpHeader` binding of `x-foo` conflicts with the `httpPrefixHeaders` binding of `ns.foo#DInput$e` to `x-foo`. `httpHeader` bindings must not case-insensitively start with any `httpPrefixHeaders` bindings. | HttpPrefixHeadersTrait
[ERROR] ns.foo#DInput$b: `httpHeader` binding of `x-foo` conflicts with the `httpPrefixHeaders` binding of `ns.foo#DInput$e` to `x-foo`. `httpHeader` bindings must not case-insensitively start with any `httpPrefixHeaders` bindings. | HttpPrefixHeadersTrait
[ERROR] ns.foo#DInput: `httpHeader` field name binding conflicts found for the `x-baz` header in the following structure members: `c`, `d` | HttpHeaderTrait
[ERROR] ns.foo#DInput: `httpHeader` field name binding conflicts found for the `x-foo` header in the following structure members: `a`, `b` | HttpHeaderTrait
[ERROR] ns.foo#DOutput$a: `httpHeader` binding of `x-foo` conflicts with the `httpPrefixHeaders` binding of `ns.foo#DOutput$c` to `x-foo`. `httpHeader` bindings must not case-insensitively start with any `httpPrefixHeaders` bindings. | HttpPrefixHeadersTrait
[ERROR] ns.foo#DOutput$b: `httpHeader` binding of `x-foo` conflicts with the `httpPrefixHeaders` binding of `ns.foo#DOutput$c` to `x-foo`. `httpHeader` bindings must not case-insensitively start with any `httpPrefixHeaders` bindings. | HttpPrefixHeadersTrait
[ERROR] ns.foo#DOutput: `httpHeader` field name binding conflicts found for the `x-foo` header in the following structure members: `a`, `b` | HttpHeaderTrait
[ERROR] ns.foo#GInput$a: Found conflicting traits on member shape: `httpHeader` conflicts with `httpLabel`, `httpHeader` conflicts with `httpPayload`, `httpHeader` conflicts with `httpQuery`, `httpLabel` conflicts with `httpHeader`, `httpLabel` conflicts with `httpPayload`, `httpLabel` conflicts with `httpQuery`, `httpPayload` conflicts with `httpHeader`, `httpPayload` conflicts with `httpLabel`, `httpPayload` conflicts with `httpQuery`, `httpQuery` conflicts with `httpHeader`, `httpQuery` conflicts with `httpLabel`, `httpQuery` conflicts with `httpPayload` | TraitConflict
[ERROR] ns.foo#GInput$b: Found conflicting traits on member shape: `httpHeader` conflicts with `httpPrefixHeaders`, `httpPrefixHeaders` conflicts with `httpHeader` | TraitConflict
[ERROR] ns.foo#GOutput$a: Found conflicting traits on member shape: `httpHeader` conflicts with `httpPayload`, `httpPayload` conflicts with `httpHeader` | TraitConflict
[ERROR] ns.foo#GOutput$b: Found conflicting traits on member shape: `httpHeader` conflicts with `httpPrefixHeaders`, `httpPrefixHeaders` conflicts with `httpHeader` | TraitConflict
[ERROR] ns.foo#JInput: The `httpPrefixHeaders` trait can be applied to only a single member of a shape, but it was found on the following members: `a`, `b` | ExclusiveStructureMemberTrait
[ERROR] ns.foo#K: Operation URI, `/k`, conflicts with other operation URIs in the same service: [`ns.foo#L` (/k)] | HttpUriConflict
[ERROR] ns.foo#KInput: `httpHeader` field name binding conflicts found for the `x-foo` header in the following structure members: `a`, `b` | HttpHeaderTrait
[ERROR] ns.foo#KInput: `httpQuery` parameter name binding conflicts found for the `foo` parameter in the following structure members: `c`, `d` | HttpQueryTrait
[ERROR] ns.foo#L: Operation URI, `/k`, conflicts with other operation URIs in the same service: [`ns.foo#K` (/k)] | HttpUriConflict
[DANGER] ns.foo#MInput$a: `Authorization` is not an allowed HTTP header binding | HttpHeaderTrait
[ERROR] ns.foo#NInput$a: This `a` structure member is marked with the `httpLabel` trait, but no corresponding `http` URI label could be found when used as the input of the `ns.foo#N` operation. | HttpLabelTrait
[ERROR] ns.foo#PInput$a: The `a` structure member corresponds to a greedy label when used as the input of the `ns.foo#P` operation. This member targets (integer: `ns.foo#Integer`), but greedy labels must target string shapes. | HttpLabelTrait
[ERROR] ns.foo#RInput$b: `httpHeader` binding of `x-foo` conflicts with the `httpPrefixHeaders` binding of `ns.foo#RInput$a` to ``. `httpHeader` bindings must not case-insensitively start with any `httpPrefixHeaders` bindings. | HttpPrefixHeadersTrait
[NOTE] ns.foo#BadError: The structure shape is not connected to from any service shape. | UnreferencedShape
[NOTE] ns.foo#BadErrorMultipleBindings: The structure shape is not connected to from any service shape. | UnreferencedShape
[ERROR] ns.foo#GInput$b: Trait `httpHeader` cannot be applied to `ns.foo#GInput$b`. This trait may only be applied to shapes that match the following selector: structure > :test(member > :test(boolean, number, string, timestamp, list > member > :test(boolean, number, string, timestamp))) | TraitTarget
[ERROR] ns.foo#GOutput$b: Trait `httpHeader` cannot be applied to `ns.foo#GOutput$b`. This trait may only be applied to shapes that match the following selector: structure > :test(member > :test(boolean, number, string, timestamp, list > member > :test(boolean, number, string, timestamp))) | TraitTarget
[ERROR] ns.foo#HInput$a: Trait `httpHeader` cannot be applied to `ns.foo#HInput$a`. This trait may only be applied to shapes that match the following selector: structure > :test(member > :test(boolean, number, string, timestamp, list > member > :test(boolean, number, string, timestamp))) | TraitTarget
[ERROR] ns.foo#EInput$label2: Trait `httpLabel` cannot be applied to `ns.foo#EInput$label2`. This trait may only be applied to shapes that match the following selector: structure > member[trait|required] :test(> :test(string, number, boolean, timestamp)) | TraitTarget
[ERROR] ns.foo#OInput$a: Trait `httpLabel` cannot be applied to `ns.foo#OInput$a`. This trait may only be applied to shapes that match the following selector: structure > member[trait|required] :test(> :test(string, number, boolean, timestamp)) | TraitTarget
[NOTE] ns.foo#QueryParamsInput: Structure member `queryParams` is marked with the `httpQueryParams` trait, and `httpQuery` traits are applied to the following members: `namedQuery`, `otherNamedQuery`. The service will not be able to disambiguate between query string parameters intended for the `queryParams` member and those explicitly bound to the `httpQuery` members. | HttpQueryParamsTrait
