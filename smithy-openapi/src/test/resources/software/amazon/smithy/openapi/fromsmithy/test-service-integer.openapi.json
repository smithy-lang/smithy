{
  "openapi": "3.0.2",
  "info": {
    "title": "RestService",
    "version": "2006-03-01"
  },
  "paths": {
    "/document": {
      "post": {
        "operationId": "CreateDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentRequestContent"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query list docs!",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Query list member reference docs!"
              },
              "maxItems": 10,
              "minItems": 0,
              "description": "Query list docs!"
            },
            "explode": true
          },
          {
            "name": "queryParams",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/QueryMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CreateDocument 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/foo": {
      "post": {
        "operationId": "CreateFoo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFooRequestContent"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "queryParams",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/QueryStringListMap"
            },
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "CreateFoo 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFooResponseContent"
                }
              }
            }
          }
        }
      }
    },
    "/payload/{path}": {
      "put": {
        "operationId": "PutPayload",
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/PutPayloadInputPayload"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timeQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "X-EnumString",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/EnumString"
            }
          },
          {
            "name": "X-Foo-Header",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PutPayload 200 response",
            "headers": {
              "X-Foo-Header": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/PutPayloadOutputPayload"
                }
              }
            }
          },
          "404": {
            "description": "PayloadNotFound 404 response"
          }
        }
      }
    },
    "/ping": {
      "post": {
        "operationId": "Ping",
        "responses": {
          "200": {
            "description": "Ping 200 response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateDocumentRequestContent": {
        "type": "object",
        "properties": {
          "abc": {
            "type": "string",
            "format": "password",
            "minLength": 1,
            "maxLength": 100
          },
          "def": {
            "type": "integer",
            "format": "int32"
          },
          "hij": {
            "$ref": "#/components/schemas/Map"
          },
          "stringDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "required": {
            "type": "string"
          }
        },
        "required": [
          "required"
        ]
      },
      "CreateDocumentResponseContent": {
        "type": "object",
        "properties": {
          "taggedUnion": {
            "$ref": "#/components/schemas/TaggedUnion"
          },
          "foo": {
            "type": "string"
          },
          "baz": {
            "type": "string"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0
          }
        },
        "required": [
          "time"
        ]
      },
      "CreateFooRequestContent": {
        "type": "object",
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      },
      "CreateFooResponseContent": {
        "type": "object",
        "properties": {
          "foo": {
            "type": "string"
          }
        }
      },
      "EnumString": {
        "type": "string",
        "enum": [
          "a",
          "c"
        ]
      },
      "Map": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "format": "password",
          "pattern": "^[a-z]+$"
        }
      },
      "PutPayloadInputPayload": {
        "type": "string",
        "format": "byte"
      },
      "PutPayloadOutputPayload": {
        "type": "string",
        "format": "byte"
      },
      "QueryMap": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "QueryStringListMap": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "TaggedUnion": {
        "oneOf": [
          {
            "type": "object",
            "title": "a",
            "properties": {
              "a": {
                "type": "string"
              }
            },
            "required": [
              "a"
            ]
          },
          {
            "type": "object",
            "title": "b",
            "properties": {
              "b": {
                "type": "string"
              }
            },
            "required": [
              "b"
            ]
          },
          {
            "type": "object",
            "title": "c",
            "properties": {
              "c": {
                "$ref": "#/components/schemas/Unit"
              }
            },
            "required": [
              "c"
            ]
          }
        ]
      },
      "Unit": {
        "type": "object"
      }
    }
  }
}
